<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.github.evansiroky</groupId>
    <artifactId>maven-semantic-release-example</artifactId>
    <packaging>jar</packaging>
    <version>SNAPSHOT</version>
    <name>maven-semantic-release-example</name>
    <description>Example project to auto-deploy maven projects</description>
    <url>https://github.com/evansiroky/maven-semantic-release-example</url>
    <inceptionYear>2022</inceptionYear>
    <properties>
        <java.version>11</java.version>
        <maven.version>3.8.4</maven.version>
        <encoding>UTF-8</encoding>
        <!--==========================================-->
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <project.build.sourceEncoding>${encoding}</project.build.sourceEncoding>
        <project.reporting.outputEncoding>${encoding}</project.reporting.outputEncoding>
        <!--==========================================-->
        <plugin.enforcer.version>3.0.0</plugin.enforcer.version>
        <!-- license -->
        <plugin.license.version>4.1</plugin.license.version>
        <license.header>.github/LICENSE_HEADER.txt</license.header>
        <license.strictCheck>true</license.strictCheck>
    </properties>
    <licenses>
        <license>
            <name>MIT</name>
            <url>https://opensource.org/licenses/MIT</url>
        </license>
    </licenses>

    <developers>
        <developer>
            <name>Evan Siroky</name>
            <email>evan.siroky@yahoo.com</email>
            <organization>Conveyal</organization>
            <organizationUrl>https://conveyal.com/</organizationUrl>
        </developer>
        <developer>
            <name>Alex Zima</name>
            <email>xzima@ro.ru</email>
        </developer>
    </developers>

    <!-- Define where the source code for this project lives -->
    <scm>
        <connection>scm:git:https://github.com/xzima/maven-semantic-release-example.git</connection>
        <developerConnection>scm:git:https://github.com/xzima/maven-semantic-release-example.git</developerConnection>
        <url>https://github.com/xzima/maven-semantic-release-example</url>
    </scm>

    <repositories>
        <repository>
            <id>sonatype-oss</id>
            <name>Sonatype OSS</name>
            <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
        </repository>
    </repositories>

    <build>
        <plugins>
            <plugin>
                <!-- https://maven.apache.org/enforcer/enforcer-rules -->
                <!-- https://blogs.oracle.com/developers/post/mastering-maven-the-enforcer-plugin -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <version>${plugin.enforcer.version}</version>
                <configuration>
                    <rules>
                        <requireJavaVersion>
                            <version>${java.version}</version>
                        </requireJavaVersion>
                        <requireMavenVersion>
                            <version>[${maven.version},)</version>
                        </requireMavenVersion>
                        <bannedDependencies>
                            <excludes>
                                <exclude>log4j:log4j</exclude>
                            </excludes>
                        </bannedDependencies>
                        <dependencyConvergence/>
                        <banDuplicatePomDependencyVersions/>
                    </rules>
                </configuration>
                <executions>
                    <execution>
                        <id>enforce</id>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <!-- Allow attaching Javadoc during releases -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>3.4.0</version>
                <configuration>
                    <source>11</source>
                    <detectJavaApiLink>false</detectJavaApiLink>
                    <!-- Turn off Java 8 strict Javadoc checking -->
                    <doclint>none</doclint>
                    <tags>
                        <tag>
                            <name>notnull</name>
                            <placement>a</placement>
                            <head>Not null</head>
                        </tag>
                        <tag>
                            <name>default</name>
                            <placement>a</placement>
                            <head>Default:</head>
                        </tag>
                    </tags>
                </configuration>
                <executions>
                    <!-- Compress Javadoc into JAR and include that JAR when deploying. -->
                    <execution>
                        <id>attach-javadocs</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <!-- Include zipped source code in releases -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- This plugin calculates code coverage and generates a report during the test phase in maven.
              It is optional in the workflow of deploying with maven-semantic-release.
             -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.8</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <!-- https://mycila.carbou.me/license-maven-plugin/ -->
                <groupId>com.mycila</groupId>
                <artifactId>license-maven-plugin</artifactId>
                <version>${plugin.license.version}</version>
                <dependencies>
                    <dependency>
                        <groupId>com.mycila</groupId>
                        <artifactId>license-maven-plugin-git</artifactId>
                        <!-- make sure you use the same version as license-maven-plugin -->
                        <version>${plugin.license.version}</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <mapping>
                        <kt>JAVADOC_STYLE</kt>
                        <kts>JAVADOC_STYLE</kts>
                    </mapping>
                    <excludes>
                        <exclude>docs/**</exclude>
                        <exclude>**/.okhttpcache/**</exclude>
                        <exclude>**/.run/**</exclude>
                        <exclude>**/src/test/resources/**</exclude>
                        <exclude>**/src/test/data/**</exclude>
                        <exclude>**/src/main/license/**</exclude>
                        <exclude>**/src/main/changelog/**</exclude>
                        <exclude>pom.xml</exclude>
                        <exclude>system.properties</exclude>
                        <exclude>Procfile</exclude>
                        <exclude>*.db</exclude>
                        <exclude>**/META-INF/**</exclude>
                        <exclude>**/robots.txt</exclude>
                        <exclude>**/LICENSE*</exclude>
                        <exclude>**/README*</exclude>
                        <exclude>**/readme*</exclude>
                        <exclude>**/.gitignore</exclude>
                        <exclude>**/*.cfg</exclude>
                        <exclude>**/*.conf</exclude>
                    </excludes>
                </configuration>
            </plugin>
            <plugin>
                <!-- https://www.mojohaus.org/license-maven-plugin/ -->
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>license-maven-plugin</artifactId>
                <version>2.0.0</version>
                <configuration>
                    <excludedScopes>test</excludedScopes>
                    <includeOptional>false</includeOptional>
                    <outputDirectory>${project.basedir}</outputDirectory>
                    <thirdPartyFilename>LICENSES_THIRD_PARTY.txt</thirdPartyFilename>
                    <!-- For Licenses which are "Unknown" by Maven, load them from a properties file -->
                    <useMissingFile>true</useMissingFile>
                    <missingFile>.github/LICENSES_THIRD_PARTY.properties</missingFile>
                    <!-- License names that should all be merged into the *first* listed name -->
                    <licenseMergesFile>.github/LICENSE_MERGES.txt</licenseMergesFile>
                    <!-- Use the template which groups all dependencies by their License type (easier to read!). -->
                    <!-- SEE: https://github.com/mojohaus/license-maven-plugin/tree/master/src/main/resources/org/codehaus/mojo/license -->
                    <fileTemplate>.github/LICENSES_THIRD_PARTY_groupByLicense.ftl</fileTemplate>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.2.0</version>
                <executions>
                    <execution>
                        <id>copy-resources</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.outputDirectory}</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${project.basedir}</directory>
                                    <includes>
                                        <include>LICENSES_THIRD_PARTY.txt</include>
                                        <include>LICENSE.txt</include>
                                    </includes>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <dependencies>
        <!-- JUnit is a Java testing framework.
          It is optional in the workflow of deploying with maven-semantic-release. -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.13.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.12.0</version>
        </dependency>
        <dependency>
            <groupId>io.ktor</groupId>
            <artifactId>ktor-server-cio</artifactId>
        </dependency>
    </dependencies>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>io.ktor</groupId>
                <artifactId>ktor-bom</artifactId>
                <version>2.0.2</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-bom</artifactId>
                <version>1.6.21</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
</project>
