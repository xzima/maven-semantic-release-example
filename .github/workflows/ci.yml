---
name: "CI"

on:
  workflow_call:
  push:
    branches:
      - master
      - rc
  pull_request:
    types: [ opened, synchronize, reopened ]
    branches:
      - master
      - rc

permissions:
  checks: write
  contents: write
  issues: write
  pull-requests: write

jobs:
  #  commit-lint:
  #    if: ${{ github.event_name != 'pull_request' || !(github.head_ref == 'rc' && github.base_ref == 'master') }}
  #    name: Lint Commit Messages
  #    runs-on: ubuntu-latest
  #    steps:
  #      - name: init repo
  #        uses: actions/checkout@v3
  #        with:
  #          fetch-depth: 0
  #
  #      - uses: wagoid/commitlint-github-action@v4.1.9
  #        with:
  #          configFile: .github/commitlint.config.js
  #          helpURL: https://www.conventionalcommits.org

  #  run-test:
  #    needs: [ commit-lint ]
  #    name: Run tests
  #    runs-on: ubuntu-latest
  #    steps:
  #      - name: init repo
  #        uses: actions/checkout@v3
  #        with:
  #          fetch-depth: 0
  #
  #      - name: init jvm
  #        uses: actions/setup-java@v2
  #        with:
  #          distribution: 'temurin'
  #          java-version: '11'
  #          cache: 'maven'
  #
  #      - run: ./mvnw clean test
  #
  #      - name: Publish Unit Test Results
  #        uses: EnricoMi/publish-unit-test-result-action@v1
  #        if: always()
  #        with:
  #          files: "target/surefire-reports/TEST-*.xml"

  release:
    #    needs: [ run-test ]
    name: Release
    runs-on: ubuntu-latest
    outputs:
      new_release_published: ${{ steps.release.outputs.new_release_published }}
    steps:
      - name: init repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: false

      #      - name: init jvm
      #        uses: actions/setup-java@v2
      #        with:
      #          distribution: 'temurin'
      #          java-version: '11'
      #          cache: 'maven'

      - name: init npm
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'
          cache: 'npm'
          cache-dependency-path: |
            package-lock.json
            patches/**

      - name: Install dependencies
        run: npm ci

      - id: release
        name: Release
        run: npx semantic-release
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Do something when a new release published
        run: |
          echo ${{ steps.release.outputs.new_release_published }}
          echo ${{ steps.release.outputs.new_release_version }}
          echo ${{ steps.release.outputs.branch_type }}
          echo ${{ steps.release.outputs.branch_name }}

      - uses: yanamura/git-flow-merge-action@v1
        if: steps.release.outputs.branch_name == 'master'
        with:
          ### GITHUB_TOKEN.(required)
          github_token: ${{ secrets.GH_TOKEN }}

          ### branch name which merged to develop and master branch.(required)
          ### ex. release/1.1.0, hotfix_branch
          branch: ${{ steps.release.outputs.branch_name }}

          ### develop branch name. default: develop (optional).
          develop_branch: 'rc'

          ### main branch name. default: master (optional).
  #        main_branch: 'main'

